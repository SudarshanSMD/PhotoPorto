@model PhotoPorto.Models.Photograph

@{
    ViewBag.Title = Model.Title;

    bool isSplitImageAvailable = true;
    if (!Model.nHD && !Model.qHD && !Model.HD && !Model.FHD && !Model.UHD4K)
    {
        isSplitImageAvailable = false;
    }

    //Setting image resolution
    var resolution = Request.Params["resolution"];
    if (resolution == null)
    {
        resolution = "qHD";
        if (!Model.qHD) {
            if (Model.nHD)
            {
                resolution = "nHD";
            }
            else if (Model.og)
            {
                resolution = "og";
            }
            else {
                isSplitImageAvailable = false;
            }
        }
    }


    //Preparing photographArray which contains names of split photogrpah files.
    string[,] PhotographArray = new string[Model.SplitRowCount, Model.SplitColumnCount];
    for (int i = 0; i < Model.SplitRowCount; i++)
    {
        for (int j = 0; j < Model.SplitColumnCount; j++)
        {
            PhotographArray[i, j] = Model.ID + "_" + Model.SplitPhotographKey + "_" + j + "_" + i + "_" + resolution + ".jpg";
        }
    }

    List<string> PhotographTags = Model.Tags.Split(',').ToList();

    string urlPathAndQuery = Request.Url.PathAndQuery;
    int galleryIdFromURL = -1;
    bool isRoutedFromGallery = false;
    if (urlPathAndQuery.Contains("Galleries"))
    {
        isRoutedFromGallery = true;
        string partialUrlPathAndQuery = urlPathAndQuery.Substring(urlPathAndQuery.LastIndexOf("Galleries/"));
        // .Substring(10); to remove Galleries/ whose length is 10
        partialUrlPathAndQuery = partialUrlPathAndQuery.Substring(10);
        int tempIndex = partialUrlPathAndQuery.IndexOf("/");
        galleryIdFromURL = int.Parse(partialUrlPathAndQuery.Substring(0, partialUrlPathAndQuery.IndexOf("/")));
    }
}

<div class="container">
    <br />
    <h2>@Model.Title</h2>

    <div style="z-index: 1000;">
        @if (isSplitImageAvailable)
        {
            <table cellpadding="0" style="border-spacing: 0">
                @for (int i = 0; i < Model.SplitRowCount; i++)
                {
                    <tr>
                        @for (int j = 0; j < Model.SplitColumnCount; j++)
                        {
                            <td><img src="~/photograph/@Model.ID/@PhotographArray[i, j]" draggable="false" /></td>
                        }
                    </tr>
                }
            </table>
        }
        else {            
            <img src='~/photograph/@Model.ID/@(Model.ID+"_"+ Model.OriginalPhotographKey+".jpg")' draggable="false" />
        }
        
    </div>

    @if (Model.qHD)
    {
        if (isRoutedFromGallery)
        {
            <a href='@Url.RouteUrl("Galleries_GalleryId_Photographs_PhotographId_Route", new { id = Model.ID, galleryId = galleryIdFromURL,  resolution = "qHD"})'>qHD</a>
        }
        else {
            @Html.ActionLink("qHD", "Details", new { id = Model.ID, resolution = "qHD" })
        }
    }



    @if (Model.FHD)
    {
        if (isRoutedFromGallery)
        {
            <a href='@Url.RouteUrl("Galleries_GalleryId_Photographs_PhotographId_Route", new { id = Model.ID, galleryId = galleryIdFromURL,  resolution = "FHD"})'>FHD</a>
        }
        else {
            @Html.ActionLink("FHD", "Details", new { id = Model.ID, resolution = "FHD" })
        }
    }


    @if (Model.UHD4K)
            {
                if (isRoutedFromGallery)
                {
            <a href='@Url.RouteUrl("Galleries_GalleryId_Photographs_PhotographId_Route", new { id = Model.ID, galleryId = galleryIdFromURL, resolution = "4k" })'>4k</a>
        }
        else {
            @Html.ActionLink("4k", "Details", new { id = Model.ID, resolution = "4k" })
        }
    }

    <div>
        <h4>@Model.Description</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Type)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Type)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.LikeCount)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.LikeCount)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.FavouriteCount)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.FavouriteCount)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Tags)
            </dt>

            <dd>
                @Html.Partial("_StringCollectionPartial", PhotographTags)
            </dd>
        </dl>
    </div>
</div>
    @*@Html.DisplayForModel()*@

    @*<p>
            @Html.ActionLink("Edit", "Edit", new { id = Model.ID }) |
            @Html.ActionLink("Back to List", "Index")
        </p>*@

    <script language="javascript">
        document.oncontextmenu = function () { return false; };
        // $('img').on('dragstart', function (event) { event.preventDefault(); });

        //  var images = document.getElementsByTagName('img');
        // for (var i = 0; i < images.length; i++) {
        //     images[i].ondragstart.bind( event.preventDefault());
        //     // images[i].ondragstart.bind();
        // }
    </script>
